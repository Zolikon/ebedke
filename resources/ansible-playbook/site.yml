---
- hosts: all
  become: true
  vars:
    timezone: Europe/Budapest
    ssh_port: 22
    ebedke_domain: ebed.today
    app_user: fedora
    app_group: fedora
    site_root: "/srv/{{ ebedke_domain }}"
    app_root: "{{ site_root}}/app"
    static_files: "{{ app_root }}/static"
    uwsgi_socket_dir: "{{ site_root }}/wsgi"
    uwsgi_socket: "{{ uwsgi_socket_dir }}/socket"
    app_env: "{{ site_root}}/virtualenv"

  tasks:
    - name: set timezone
      file:
        src: /usr/share/zoneinfo/{{ timezone }}
        dest: /etc/localtime
        state: link

    - name: upgrade all packages
      dnf:
        name: "*"
        state: latest

    - name: install packages
      dnf: name="{{ item }}" state=latest
      with_items:
        - nginx
        - uwsgi
        - uwsgi-plugin-python3
        - python3
        - python3-virtualenv
        - redis
        - git
        - firewalld

    - name: install pipenv
      pip:
        name: pipenv
        executable: pip3

    - name: change ssh port
      lineinfile: dest=/etc/ssh/sshd_config
                  regexp="^Port\s"
                  line="Port {{ ssh_port }}"
                  state=present

    - name: disallow password authentication
      lineinfile: dest=/etc/ssh/sshd_config
                  regexp="^PasswordAuthentication"
                  line="PasswordAuthentication no"
                  state=present

    - name: disallow root SSH access
      lineinfile: dest=/etc/ssh/sshd_config
                  regexp="^PermitRootLogin"
                  line="PermitRootLogin no"
                  state=present

    - name: clone ebedke git repository
      git:
        repo: 'https://github.com/ijanos/ebedke.git'
        dest: "{{ app_root }}"
        update: no

    - name: create requirements.txt
      shell: python3 -m pipenv lock --requirements > requirements.txt
      args:
        chdir: "{{ app_root }}"
        creates: requirements.txt

    - name: create virtualenv
      pip:
        requirements: "{{ app_root }}/requirements.txt"
        virtualenv: "{{ app_env }}"
        virtualenv_command: virtualenv-3

    - name: owerwrite default nginx config
      copy:
        src: nginx.conf
        dest: /etc/nginx/nginx.conf

    - name: add ebedke nginx config
      template:
        src: nginx_ebedke.conf.j2
        dest: /etc/nginx/conf.d/ebedke.conf

    - name: set up uwsgi
      template:
        src: uwsgi_ebedke.ini.j2
        dest: /etc/uwsgi.d/ebedke.ini
        owner: "{{ app_user }}"
        group: "{{ app_group }}"

    - name: create user writeable directory for uwsgi socket
      file:
        path: "{{ uwsgi_socket_dir }}"
        state: directory
        owner: "{{ app_user }}"
        group: "{{ app_group }}"

    - name: set up firewall
      firewalld:
        port: "{{ item }}/tcp"
        permanent: true
        state: enabled
      with_items:
        - 80
        - "{{ ssh_port }}"

    - name: add config file
      copy:
        src: config.py
        dest: "{{ app_root }}/config.py"

    - name: enable reading static files
      sefcontext:
        target: "{{ app_root }}/static(/.*)?"
        setype: httpd_sys_content_t
        state: present

    - name:  enable readwrite on the socket
      sefcontext:
        target: "{{ uwsgi_socket_dir }}"
        setype: httpd_sys_rw_content_t
        state: present

    - name: restore the SELinux context on all the files
      command: "restorecon -Rv {{ site_root }}"

    - name: enable and start services
      systemd:
        name: "{{ item }}"
        enabled: yes
        state: started
        masked: no
      with_items:
        - nginx
        - uwsgi
        - redis
